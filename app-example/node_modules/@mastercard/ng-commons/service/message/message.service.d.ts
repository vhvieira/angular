import { Observable } from 'rxjs/Observable';
export declare function filterSameOrigin(window: Window): (msg: MessageEvent) => boolean;
export declare function filterSameWindow(source: Window): (msg: MessageEvent) => boolean;
/**
 * This service allows the client to send/receive message events
 * to/from other windows as long as both windows share the same origin.
 */
export declare class MessageService {
    private window;
    private message$;
    constructor(window: any);
    /**
     * Provides a stream of messages coming from the given window.
     *
     * @param source filter messages that come from this window. Defaults to the parent window.
     */
    get(source?: Window): Observable<MessageEvent>;
    /**
     * Sends a message to the given target window.
     *
     * @param message a value that will be serialized and sent as a message.
     * @param target the message will be sent to this window. Defaults to the parent window.
     */
    post(message: any, target?: Window): void;
}
