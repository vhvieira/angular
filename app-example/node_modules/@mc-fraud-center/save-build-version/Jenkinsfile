#!groovy
def registryUrl = "https://globalrepository.mclocal.int/artifactory/api/npm"
def scope = "mc-fraud-center"

pipeline {
  agent { label "digital" }

  // Template for publishing in Artifactory
  // https://fusion.mastercard.int/confluence/display/CD/Using+JavaScript+Tools

  environment {
    PATH = "${tool 'NodeJS-8.1.4'}/bin:$PATH"
    AFACT_REPO_CREDS = credentials("DEV_ARTIFACTORY_CRED_ID")
  }

  stages {

    stage("Setup") {
      steps {
        sh "node -v"
        sh "npm -v"
        sh "npm install"

        // obtain authentication info from Artifactory
        sh "curl '-u${AFACT_REPO_CREDS}' '${registryUrl}/npm-release/auth/${scope}' > .npmrc"
      }
    }

    stage ("Publish") {
      when {
        allOf {
          branch "master";
          expression {
            try {
              // skips the publishing when version is already published or not in master branch
              // npm version major|minor|patch bumps the package version and tags the commit.
              sh 'git fetch --tags'
              sh 'git describe --exact-match --tags'
              return true
            } catch (Exception e) {
              echo e.toString()
              return false
            }
          }
        }
      }
      steps {
        sh "npm publish --registry ${registryUrl}/npm-release/"
      }
    }

  }
  post {
    always {
      // auth token from the Artifactory API is not persisted in the pipeline's workspace
      sh "rm -rf .npmrc"
    }
  }
}
