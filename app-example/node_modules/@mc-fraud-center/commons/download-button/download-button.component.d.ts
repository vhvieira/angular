import { ElementRef, EventEmitter } from '@angular/core';
import { HttpResponse } from '../http/http-response.class';
import { Observable } from 'rxjs/Observable';
/**
 * This component displays a button that triggers a download stream.
 *
 * ### Example:
 * ```html
 * <mc-download-button
 *   label="TCC_LIMITS.LABELS.EXPORT"
 *   filename="StandIn TCC Limits.xlsx"
 *   [disabled]="! records.length"
 *   (download)="onExport()"
 * ></mc-download-button>
 * ```
 *
 * ```ts
 *
 * // parent.component.ts
 *
 * // @ViewChild(DownloadButtonComponent) exportButton: DownloadButtonComponent;
 *
 * onExport() {
 *   const stream: Observable<HttpResponse<any>> = this.service.exportFile();
 *   this.exportButton.save(stream).subscribe(
 *     () => console.log('export done'),
 *     err => console.error('export error', err),
 *   );
 * }
 * ```
 */
export declare class DownloadButtonComponent {
    /** Enables / disables the button */
    disabled: boolean;
    /** The file will be downloaded with this name. Defaults to "downloaded.txt" */
    filename: string;
    /** Button's label (key for translation) */
    label: string;
    /** Emits when the button is clicked */
    download: EventEmitter<void>;
    downloadAnchor: ElementRef;
    window: Window;
    constructor(window: any);
    /** Handler to the button. */
    onDownload(): void;
    /**
     * Triggers the file download.
     * @param download$ endpoint's stream
     */
    save(download$: Observable<HttpResponse<any>>): Observable<HttpResponse<any>>;
}
